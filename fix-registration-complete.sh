#!/bin/bash

echo "ðŸ”§ Complete Registration Fix Script"
echo "=================================="
echo ""
echo "Copy and run these commands on your Lightsail instance:"
echo ""
echo "ssh -i ~/.ssh/handreceipt-key-us-east-1 ubuntu@44.193.254.155"
echo ""
echo "cd /opt/handreceipt/deployments/lightsail"
echo ""
echo "# 1. First, check current users table schema"
echo "sudo docker-compose exec postgres psql -U handreceipt -d handreceipt -c \"\\d users\""
echo ""
echo "# 2. Fix the schema if needed"
echo "sudo docker-compose exec postgres psql -U handreceipt -d handreceipt << 'EOF'"
echo "-- Ensure all required columns exist"
echo "ALTER TABLE users ADD COLUMN IF NOT EXISTS email VARCHAR(255);"
echo "ALTER TABLE users ADD COLUMN IF NOT EXISTS password_hash VARCHAR(255);"
echo "ALTER TABLE users ADD COLUMN IF NOT EXISTS first_name VARCHAR(100);"
echo "ALTER TABLE users ADD COLUMN IF NOT EXISTS last_name VARCHAR(100);"
echo "ALTER TABLE users ADD COLUMN IF NOT EXISTS rank VARCHAR(50);"
echo "ALTER TABLE users ADD COLUMN IF NOT EXISTS unit VARCHAR(100);"
echo "ALTER TABLE users ADD COLUMN IF NOT EXISTS status VARCHAR(50) DEFAULT 'active';"
echo "ALTER TABLE users ADD COLUMN IF NOT EXISTS created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP;"
echo "ALTER TABLE users ADD COLUMN IF NOT EXISTS updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP;"
echo ""
echo "-- Add unique constraint on email if not exists"
echo "DO \$\$ BEGIN"
echo "    IF NOT EXISTS (SELECT 1 FROM pg_constraint WHERE conname = 'users_email_key') THEN"
echo "        ALTER TABLE users ADD CONSTRAINT users_email_key UNIQUE (email);"
echo "    END IF;"
echo "END \$\$;"
echo ""
echo "-- Show the updated schema"
echo "\\d users"
echo "EOF"
echo ""
echo "# 3. Create a test user directly in the database"
echo "sudo docker-compose exec postgres psql -U handreceipt -d handreceipt << 'EOF'"
echo "-- Create test user with bcrypt hash for 'TestPassword123!'"
echo "INSERT INTO users (email, password_hash, first_name, last_name, rank, unit, status)"
echo "VALUES ("
echo "    'test.user@handreceipt.com',"
echo "    '\$2a\$10\$3qX7hro2UbWjFLJZkq8LXeBw0UoNxKhGPKBkoVmVVcQaFzwQ1n7Iu',"
echo "    'Test',"
echo "    'User',"
echo "    'PVT',"
echo "    'Test Unit',"
echo "    'active'"
echo ") ON CONFLICT (email) DO UPDATE SET"
echo "    password_hash = EXCLUDED.password_hash,"
echo "    first_name = EXCLUDED.first_name,"
echo "    last_name = EXCLUDED.last_name;"
echo ""
echo "-- Verify the user was created"
echo "SELECT id, email, first_name, last_name, rank, unit, status FROM users WHERE email = 'test.user@handreceipt.com';"
echo "EOF"
echo ""
echo "# 4. Check backend logs"
echo "sudo docker-compose logs app --tail=20"
echo ""
echo "# 5. Restart the backend"
echo "sudo docker-compose restart app"
echo ""
echo "# Wait for backend to start"
echo "sleep 10"
echo ""
echo "# 6. Test login with the created user"
echo "curl -X POST https://api.handreceipt.com/api/auth/login \\"
echo "  -H 'Content-Type: application/json' \\"
echo "  -H 'Origin: https://www.handreceipt.com' \\"
echo "  -d '{\"email\":\"test.user@handreceipt.com\",\"password\":\"TestPassword123!\"}'"
echo ""
echo "========================================"
echo "After running these commands, you should be able to login with:"
echo "Email: test.user@handreceipt.com"
echo "Password: TestPassword123!" 